<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ProjectSetup Version="11.0">
  <MatchConstraints ProjectID="Project 1">
    <ExchangerMinApproachTemperature>10</ExchangerMinApproachTemperature>
    <ReturnRate>10</ReturnRate>
    <LMTDCorrectionFactor>0.8</LMTDCorrectionFactor>
    <MaximumAreaPerShell>500</MaximumAreaPerShell>
    <ExchangerMinApproachTemperature>10</ExchangerMinApproachTemperature>
    <HeatExchangerModels>
      <Model ID="-728703673" IsDefault="true">
        <Name>Default</Name>
        <HTConfiguration>0</HTConfiguration>
        <VariableA>10000</VariableA>
        <VariableB>800</VariableB>
        <VariableC>0.8</VariableC>
      </Model>
      <Model ID="-505192565" IsDefault="true">
        <Name>Fired Heater</Name>
        <HTConfiguration>1</HTConfiguration>
        <VariableA>100000</VariableA>
        <VariableB>1000</VariableB>
        <VariableC>0.8</VariableC>
      </Model>
    </HeatExchangerModels>
  </MatchConstraints>
  <Navigation>
    <Tree>PD94bWwgdmVyc2lvbj0iMS4wIj8+PFRyZWU+PEVBQ1RyZWVOb2RlIEtleT0iUHJvamVjdCAxIiBUZXh0PSJQcm9qZWN0IDEiIFNjcmVlbkZhY3RvcnlLZXk9IlVJUGFnZVNjcmVlbiIgTm9kZUZvcm09IlByb2plY3QiIElzU2VsZWN0ZWQ9IkZhbHNlIiBSZXRyb2ZpdEluZGV4PSItMSIgRmxhZz0iMCIgU2NlbmFyaW9OdW1iZXI9IjAiPjxVSVNjcmVlblN1YmplY3Q+PEtleT5Qcm9qZWN0IDE8L0tleT48SGVhZGVyPlByb2plY3QgMSAtIFNldHVwPC9IZWFkZXI+PC9VSVNjcmVlblN1YmplY3Q+PEVBQ1RyZWVOb2RlIEtleT0iUHJvamVjdCAxLlNldHVwIiBUZXh0PSJTZXR1cCIgU2NyZWVuRmFjdG9yeUtleT0iVUlQYWdlU2NyZWVuIiBOb2RlRm9ybT0iU2V0dXAiIElzU2VsZWN0ZWQ9IkZhbHNlIiBSZXRyb2ZpdEluZGV4PSItMSIgRmxhZz0iMCI+PFVJU2NyZWVuU3ViamVjdD48S2V5PlByb2plY3QgMS5TZXR1cDwvS2V5PjxIZWFkZXI+UHJvamVjdCAxIC0gU2V0dXA8L0hlYWRlcj48L1VJU2NyZWVuU3ViamVjdD48L0VBQ1RyZWVOb2RlPjxFQUNUcmVlTm9kZSBLZXk9IlByb2plY3QgMS5TYXZpbmcgUG90ZW50aWFscyIgVGV4dD0iU2F2aW5nIFBvdGVudGlhbHMiIFNjcmVlbkZhY3RvcnlLZXk9IlVJUGFnZVNjcmVlbiIgTm9kZUZvcm09IlNhdmluZ1BvdGVudGlhbHMiIElzU2VsZWN0ZWQ9IlRydWUiIFJldHJvZml0SW5kZXg9Ii0xIiBGbGFnPSIwIj48VUlTY3JlZW5TdWJqZWN0PjxLZXk+UHJvamVjdCAxLlNhdmluZyBQb3RlbnRpYWxzPC9LZXk+PEhlYWRlcj5Qcm9qZWN0IDEgLSBTYXZpbmcgUG90ZW50aWFsczwvSGVhZGVyPjwvVUlTY3JlZW5TdWJqZWN0PjwvRUFDVHJlZU5vZGU+PC9FQUNUcmVlTm9kZT48L1RyZWU+</Tree>
  </Navigation>
  <Flowsheet ProjectID="Project 1">
    <GlobalDTMin>10</GlobalDTMin>
    <SelectedFlowsheets>
      <Flowsheet>Case (Main),1</Flowsheet>
      <Flowsheet ID="520956854">Case (Main)<UtiltiesType>U-GAS;U-WATER;U-WATER;U-ELEC</UtiltiesType></Flowsheet>
    </SelectedFlowsheets>
    <ProcessType>Select Process Type</ProcessType>
    <GlobalDeltaMinTip>
    </GlobalDeltaMinTip>
  </Flowsheet>
  <DataExtractionRules ProjectID="Project 1">
    <PRBPIgnore>1</PRBPIgnore>
    <ExtractLive>0</ExtractLive>
    <BoilerWater>20</BoilerWater>
    <IgnoreStreamSub>0</IgnoreStreamSub>
    <IgnoreStreamSuper>0</IgnoreStreamSuper>
  </DataExtractionRules>
  <Information>
    <Notes>
    </Notes>
  </Information>
  <EnginData></EnginData>
</ProjectSetup>